{"version":3,"sources":["components/Search.js","components/Navbars.js","components/Result.js","components/Results.js","components/Popup.js","components/TemplatePage.js","App.js","serviceWorker.js","index.js"],"names":["Search","handleInput","className","type","placeholder","onChange","to","href","icon","faSearch","size","Navbars","onClick","window","location","reload","faVideo","Result","result","openPopup","link","poster_path","id","alt","src","title","name","Results","results","map","key","Popup","selected","closePopup","overview","release_date","vote_average","TemplatePage","apiurls","useState","state","setState","useEffect","axios","get","then","data","prevState","console","log","App","s","searchUrl","e","target","value","path","exact","render","props","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fbc0b52b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Search({ handleInput }) {\r\n  return (\r\n    <section className=\"searchbox-wrap\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"searchbox\"\r\n        placeholder=\"Search for a movie...\"\r\n        onChange={handleInput}\r\n      ></input>\r\n      <Link to=\"/search\">\r\n        <a className=\"searchbtn\" href=\"#\">\r\n          {\" \"}\r\n          <FontAwesomeIcon icon={faSearch} size=\"2x\" />\r\n        </a>\r\n      </Link>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport \"./navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faVideo } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Navbars() {\r\n  return (\r\n    <div>\r\n      <nav>\r\n        <p onClick={() => window.location.reload(false)}>\r\n          <FontAwesomeIcon icon={faVideo} />\r\n          TingMovie\r\n        </p>\r\n        <ul>\r\n          <Link to=\"/\">\r\n            <li>\r\n              <a href=\"#\">Home</a>\r\n            </li>\r\n          </Link>\r\n          <Link to=\"/NowPlaying\">\r\n            <li>\r\n              <a href=\"#\">Now Playing</a>\r\n            </li>\r\n          </Link>\r\n          <Link to=\"/TopRatedMovies\">\r\n            <li>\r\n              <a href=\"#\">Top Rated Movies</a>\r\n            </li>\r\n          </Link>\r\n          <li>\r\n            <a href=\"#\">Genre</a>\r\n            <ul>\r\n              <Link to=\"/genre/action\">\r\n                <li>\r\n                  <a href=\"#\">Action</a>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/genre/adventure\">\r\n                <li>\r\n                  <a href=\"#\">Adventure</a>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/genre/animation\">\r\n                <li>\r\n                  <a href=\"#\">Animation</a>\r\n                </li>\r\n              </Link>\r\n\r\n              <Link to=\"/genre/comedy\">\r\n                <li>\r\n                  <a href=\"#\">Comedy</a>\r\n                </li>\r\n              </Link>\r\n\r\n              <Link to=\"/genre/crime\">\r\n                <li>\r\n                  <a href=\"#\">Crime</a>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/genre/drama\">\r\n                <li>\r\n                  <a href=\"#\">Drama</a>\r\n                </li>\r\n              </Link>\r\n              <Link to=\"/genre/horror\">\r\n                <li>\r\n                  <a href=\"#\">Horror</a>\r\n                </li>\r\n              </Link>\r\n            </ul>\r\n          </li>\r\n          <Link to=\"/Discover\">\r\n            <li>\r\n              <a href=\"#\">Discover</a>\r\n            </li>\r\n          </Link>\r\n          <Link to=\"/PopularTvShows\">\r\n            <li>\r\n              <a href=\"#\">Popular Tv Shows</a>\r\n            </li>\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbars;\r\n","import React from \"react\";\r\n\r\nfunction Result({ result, openPopup }) {\r\n  //using the api image and title path to get the picture and title\r\n  const link = `https://image.tmdb.org/t/p/w200/${result.poster_path}`;\r\n  return (\r\n    <div className=\"result\" onClick={() => openPopup(result.id)}>\r\n      {/* If there is no image from the api, then use a different image*/}\r\n      {result.poster_path == null ? (\r\n        <img\r\n          className=\"result\"\r\n          alt=\"not available \"\r\n          src=\"https://www.electiondataservices.com/wp-content/uploads/2014/10/sorry-image-not-available.jpg\"\r\n        />\r\n      ) : (\r\n        <img src={link} alt=\"default\" />\r\n      )}\r\n      {/*if there is no title given for the movie from the api, then it will use the name instead*/}\r\n      {result.title == null ? <h3>{result.name}</h3> : <h3>{result.title}</h3>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Result;\r\n","import React from \"react\";\r\nimport Result from \"./Result\";\r\n\r\nfunction Results({ results, openPopup }) {\r\n  return (\r\n    <section className=\"results\">\r\n      {results.map((result) => (\r\n        <Result key={result.id} result={result} openPopup={openPopup} />\r\n      ))}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\n\r\nfunction Popup({ selected, closePopup }) {\r\n  const link = `https://image.tmdb.org/t/p/w200/${selected.poster_path}`;\r\n\r\n  return (\r\n    <section className=\"popup\">\r\n      <div className=\"content\">\r\n        <h2>{selected.title}</h2>\r\n        <div className=\"plot\">\r\n          <img alt=\"primary\" src={link} />\r\n          <p> {selected.overview}</p>\r\n        </div>\r\n        <div className=\"info\">\r\n          <p> Released Date: {selected.release_date}</p>\r\n          <p>Rating: {selected.vote_average} </p>\r\n        </div>\r\n      </div>\r\n      <button className=\"close\" onClick={closePopup}>\r\n        Close\r\n      </button>\r\n    </section>\r\n  );\r\n}\r\n//might have to change\r\nexport default Popup;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Results from \"./Results\";\r\nimport axios from \"axios\";\r\nimport Popup from \"./Popup\";\r\n\r\nfunction TemplatePage({ apiurls }) {\r\n  const [state, setState] = useState({\r\n    results: [],\r\n    selected: {},\r\n  });\r\n\r\n  //using useEffect to make it run once, to fetch the api data of movies/shows with the specified api url that is passed through it\r\n  useEffect(() => {\r\n    axios.get(apiurls).then(({ data }) => {\r\n      let results = data.results;\r\n      setState((prevState) => {\r\n        return { ...prevState, results: results };\r\n      });\r\n    });\r\n  });\r\n\r\n  // function that is used when a movie title/picture is clicked on, so it uses the movie's id to fetch the api data of the movie data, so it can be used in the popup info page\r\n  const openPopup = (id) => {\r\n    axios\r\n      .get(\r\n        \"https://api.themoviedb.org/3/movie/\" +\r\n          id +\r\n          \"?api_key=7761243a41830c90132c413d1a1d41cc\"\r\n      )\r\n      .then(({ data }) => {\r\n        let result = data;\r\n\r\n        console.log(result);\r\n\r\n        setState((prevState) => {\r\n          return { ...prevState, selected: result };\r\n        });\r\n      });\r\n  };\r\n  //this function is used when the button close is pressed in the popup info page, where it goes back to the previous page\r\n  const closePopup = () => {\r\n    setState((prevState) => {\r\n      return { ...prevState, selected: {} };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Results results={state.results} openPopup={openPopup} />\r\n      {typeof state.selected.title != \"undefined\" ? (\r\n        <Popup selected={state.selected} closePopup={closePopup} />\r\n      ) : (\r\n        false\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TemplatePage;\r\n","import React, { useState } from \"react\";\nimport Search from \"./components/Search\";\nimport Navbars from \"./components/Navbars\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport TemplatePage from \"./components/TemplatePage\";\n\nfunction App() {\n  const [state, setState] = useState({\n    s: \"\",\n  });\n  const homePageUrl =\n    \"https://api.themoviedb.org/3/trending/all/day?api_key=7761243a41830c90132c413d1a1d41cc\";\n  const nowPlayingUrl =\n    \"https://api.themoviedb.org/3/movie/now_playing?api_key=7761243a41830c90132c413d1a1d41cc&language=en-US\";\n  const topRatedMoviesUrl =\n    \"https://api.themoviedb.org/3/movie/top_rated?api_key=7761243a41830c90132c413d1a1d41cc&language=en-US&page=1\";\n  const discoverUrl =\n    \"https://api.themoviedb.org/3/discover/movie?api_key=7761243a41830c90132c413d1a1d41cc&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&year=2019\";\n  const popularTvShowsUrl =\n    \"https://api.themoviedb.org/3/tv/popular?api_key=7761243a41830c90132c413d1a1d41cc&language=en-US&page=1\";\n  const genreActionUrl =\n    \"https://api.themoviedb.org/3/discover/movie?api_key=7761243a41830c90132c413d1a1d41cc&language=en-US&sort_by=release_date.desc&include_adult=false&include_video=false&page=1&year=2019&with_genres=28\";\n  const genreAdventureUrl =\n    \"https://api.themoviedb.org/3/discover/movie?api_key=7761243a41830c90132c413d1a1d41cc&language=en-US&sort_by=release_date.desc&include_adult=false&include_video=false&page=1&year=2019&with_genres=12\";\n  const genreAnimationUrl =\n    \"https://api.themoviedb.org/3/discover/movie?api_key=7761243a41830c90132c413d1a1d41cc&language=en-US&sort_by=release_date.desc&include_adult=false&include_video=false&page=1&year=2019&with_genres=16\";\n  const genreComedyUrl =\n    \"https://api.themoviedb.org/3/discover/movie?api_key=7761243a41830c90132c413d1a1d41cc&language=en-US&sort_by=release_date.desc&include_adult=false&include_video=false&page=1&year=2019&with_genres=35\";\n  const genreCrimeUrl =\n    \"https://api.themoviedb.org/3/discover/movie?api_key=7761243a41830c90132c413d1a1d41cc&language=en-US&sort_by=release_date.desc&include_adult=false&include_video=false&page=1&year=2019&with_genres=80\";\n  const genreDramaUrl =\n    \"https://api.themoviedb.org/3/discover/movie?api_key=7761243a41830c90132c413d1a1d41cc&language=en-US&sort_by=release_date.desc&include_adult=false&include_video=false&page=1&year=2019&with_genres=18\";\n  const genreHorrorUrl =\n    \"https://api.themoviedb.org/3/discover/movie?api_key=7761243a41830c90132c413d1a1d41cc&language=en-US&sort_by=release_date.desc&include_adult=false&include_video=false&page=1&year=2019&with_genres=27\";\n\n  const searchUrl = `https://api.themoviedb.org/3/search/multi?api_key=7761243a41830c90132c413d1a1d41cc&query=${state.s}`;\n\n  //getting the value of what we input into the search bar\n  const handleInput = (e) => {\n    let s = e.target.value;\n    setState((prevState) => {\n      return { ...prevState, s: s };\n    });\n    //console.log(state.s);\n  };\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <header className=\"App-header\">\n          <Navbars />\n        </header>\n        <main>\n          <Search handleInput={handleInput} />\n         \n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              render={(props) => <TemplatePage apiurls={homePageUrl} />}\n            />\n            <Route\n              path=\"/search\"\n              render={(props) => <TemplatePage apiurls={searchUrl} />}\n            />\n            <Route\n              path=\"/NowPlaying\"\n              render={(props) => <TemplatePage apiurls={nowPlayingUrl} />}\n            />\n            <Route\n              path=\"/TopRatedMovies\"\n              render={(props) => <TemplatePage apiurls={topRatedMoviesUrl} />}\n            />\n            <Route\n              path=\"/genre/action\"\n              render={(props) => <TemplatePage apiurls={genreActionUrl} />}\n            />\n            <Route\n              path=\"/genre/adventure\"\n              render={(props) => <TemplatePage apiurls={genreAdventureUrl} />}\n            />\n            <Route\n              path=\"/genre/animation\"\n              render={(props) => <TemplatePage apiurls={genreAnimationUrl} />}\n            />\n            <Route\n              path=\"/genre/comedy\"\n              render={(props) => <TemplatePage apiurls={genreComedyUrl} />}\n            />\n            <Route\n              path=\"/genre/crime\"\n              render={(props) => <TemplatePage apiurls={genreCrimeUrl} />}\n            />\n            <Route\n              path=\"/genre/drama\"\n              render={(props) => <TemplatePage apiurls={genreDramaUrl} />}\n            />\n            <Route\n              path=\"/genre/horror\"\n              render={(props) => <TemplatePage apiurls={genreHorrorUrl} />}\n            />\n            <Route\n              path=\"/Discover\"\n              render={(props) => <TemplatePage apiurls={discoverUrl} />}\n            />\n            <Route\n              path=\"/PopularTvShows\"\n              render={(props) => <TemplatePage apiurls={popularTvShowsUrl} />}\n            />\n\n            {/* \n            Instead of making each page, i used a template page and pass the api url for that specify page\n            */}\n          </Switch>\n        </main>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}